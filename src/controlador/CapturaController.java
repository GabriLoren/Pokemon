package controlador;

import javafx.fxml.FXML;

import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.LinkedList;
import java.util.ResourceBundle;

import crud.CargarEntrenador;
import crud.PokemonEntrenadorCrud;

import funcionalidades.GeneraPokemonAleatorio;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.stage.Stage;
import modelo.Pokemon;
import modelo.Trainer;

public class CapturaController implements Initializable {
	@FXML
	private Button capturarPokemon;
	@FXML
	private Button bucarPokemon;
	@FXML
	private Label pokemonEncontrado;
	@FXML
	private ImageView imgPokemon;

	MediaPlayer mediaPlayer1;
	MediaPlayer mediaPlayer2;
	String path;
	File archivo;
	Media media;

//	@FXML
//	private ImageView imgPokeball;

	private static Pokemon pokemon;

	private Trainer entrenador = CargarEntrenador.getEntrenador();

	@FXML
	private Label lblMote;
	
	@FXML
	private Label lblInsertarMote;

	@FXML
	private Button btnInsertarMote;

	@FXML
	private TextField txtMote;

	static Pokemon pokemonCapturado;

	int aletorio;
	int cazado;

	public Pokemon getPokemon() {
		return pokemon;
	}

	// Event Listener on Button[#capturarPokemon].onMousePressed
	@FXML
	public void pressedCaptura(MouseEvent event) {
		// TODO Autogenerated

		// tiene 1/3 de probabilidad de capturarlo, si lo captura el boton captura
		// cambia su nombre a mote
		aletorio = (int) (Math.random() * 3 + 1);
		cazado = 3;
		System.out.println(aletorio);

		//si salimos sin habveer buscado un pokemon salta una excepción al no haber ningun sonido existente
		//la capturamos porque eso no nos afecta para nada
		try {
			mediaPlayer1.stop();
		} catch (Exception e) {
			// TODO: handle exception
		}

		if (aletorio == cazado) {

			path = "src\\sound\\captura.mp3";

		} else {

			path = "src\\sound\\capturaFallida.mp3";

		}

		if (!capturarPokemon.getText().equals("MOTE")) {

			archivo = new File(path);
			media = new Media(archivo.toURI().toString());
			mediaPlayer2 = new MediaPlayer(media);
//			mediaPlayer2.setCycleCount(MediaPlayer.INDEFINITE);
			mediaPlayer2.play();

		}

		if (pokemon != null)
			imgPokemon.setImage(new Image(getClass().getResourceAsStream("pokeball.png")));
//		else {
//			pokemonEncontrado.setText("");
//		}

//		imgPokemon.setImage(new Image(getClass().getResourceAsStream("pokeball.png")));

//		imgPokemon.setImage(new Image(getClass().getResourceAsStream("pokeball.png")));

	}

	// Event Listener on Button[#capturarPokemon].onMouseReleased
	@FXML
	public void ReleasedCaptura(MouseEvent event) throws InterruptedException {
		// TODO Autogenerated

//		imgPokeball.setImage(null);

		if (aletorio != cazado && pokemon != null) {

			imgPokemon.setImage(new Image(getClass().getResourceAsStream(pokemon.getImagen())));
			Thread.sleep(5500);

			path = "src\\sound\\" + pokemon.getSonido();
			archivo = new File(path);
			media = new Media(archivo.toURI().toString());
			mediaPlayer1 = new MediaPlayer(media);
			mediaPlayer1.setCycleCount(MediaPlayer.INDEFINITE);
			mediaPlayer1.play();

		} else {

//			path = "C:\\Users\\34661\\Desktop\\eclipse-workspace\\Pokemon\\src\\sound\\captura.mp3";
//			archivo = new File(path);
//			media = new Media(archivo.toURI().toString());
//			mediaPlayer2 = new MediaPlayer(media);
////			mediaPlayer.setCycleCount(MediaPlayer.INDEFINITE);
//			mediaPlayer2.play();

//			mediaPlayer1.stop();
		}

//		if(pokemon==null&&capturarPokemon.getText().equals(event)) pokemonEncontrado.setText("Aún no has encontrado ningun pokemon");

//		imgPokemon.setImage(new Image(getClass().getResourceAsStream(pokemon.getImagen())));

	}

	// Event Listener on Button[#btnInsertarMote].onAction
	@FXML
	public void insertarMotre(ActionEvent event) {
		// TODO Autogenerated

		String mote = txtMote.getText().toUpperCase();

		if (Pokemon.comprobarMote(mote) && !mote.equals("")) {
			if (pokemon.getEquipo().equals("NO")) {
				pokemonCapturado = entrenador.getTodosLosPokemon().getLast();
			} else
				pokemonCapturado = entrenador.getEquipoPokemon().getLast();

			System.out.println(pokemonCapturado.getEquipo());
			pokemonCapturado.setNickname(mote);
			PokemonEntrenadorCrud.actualizarPokemonEnBbDd(pokemonCapturado);
//			Captura.captura(pokemon, mote, entrenador.getId());//inserta el pokemon capturado en la BbDd
//			entrenador.insertraPokemonCapturado(pokemon,mote);//inserta el pokemon capturado en LinkedList<Pokemon> todosLosPokemon;

//			Stage stage = (Stage) this.txtMote.getScene().getWindow(); 
//			

//			stage.close();

			// se cierra la ventana actual
			Stage stage2 = (Stage) this.txtMote.getScene().getWindow();
			stage2.close();
			pokemon = null;

		} else {

			lblInsertarMote.setText("No se puede dejar vacio");

		}

//		pokemonCapturado.setText("Enhorabuenas has capturado un nuevo " + pokemon.getName());

	}

	// Event Listener on Button[#capturarPokemon].onAction
	@FXML
	public void capturarPokemon(ActionEvent event) throws IOException, InterruptedException {

//		mediaPlayer1.stop();

		if (capturarPokemon.getText().equals("MOTE")) {

			FXMLLoader loader = new FXMLLoader(getClass().getResource("/vista/InsertarMote.fxml"));

			Parent root = loader.load();

			Scene scene = new Scene(root);

			Stage stage = new Stage();

			capturarPokemon.setText("CAPTURAR");

			imgPokemon.setImage(null);

			stage.setScene(scene);
			stage.showAndWait();
//			imgPokemon.setImage(null);
			pokemon = null;

		}

		if (pokemon != null) {

			if (aletorio == cazado) {

				// SI NO ESTA EL EQUIPO COMPLETO LO METE AL EQUIPO
				if (entrenador.getEquipoPokemon().size() < 6) {
					pokemon.setEquipo("SI");
				}

				else {
					pokemon.setEquipo("NO");
				}

//				Captura.captura(pokemon, entrenador.getId());// inserta el pokemon capturado en la BbDd
				entrenador.capturar(pokemon);// inserta el pokemon capturado en LinkedList<Pokemon> y en la BbDd
												// todosLosPokemon;

//				FXMLLoader loader = new FXMLLoader(getClass().getResource("/vista/InsertarMote.fxml"));
//
//				Parent root = loader.load();
//
//				Scene scene = new Scene(root);
//
//				Stage stage = new Stage();
//		
//
//				stage.setScene(scene);

				capturarPokemon.setText("MOTE");
//				mediaPlayer.stop();
				Thread.sleep(7000);

			}

		}
	}

//		else if (pokemon == null)
//			pokemonEncontrado.setText("Aún no has encontrado ningun pokemon");
//	}

	// Event Listener on Button[#salir].onAction
	@FXML
	public void salir(ActionEvent event) {
		// TODO Autogenerated

		//si salimos sin habveer buscado un pokemon salta una excepción al no haber ningun sonido existente
		//la capturamos porque eso no nos afecta para nada
		try {
			mediaPlayer2.stop();
		} catch (Exception e) {
			// TODO: handle exception
		}

//		 mediaPlayer1.stop();

		pokemon = null;

		// se cierra la ventana actual
		Stage stage2 = (Stage) this.bucarPokemon.getScene().getWindow();
		stage2.close();

	}

	// Event Listener on Button[#bucarPokemon].onAction
	@FXML
	public void bucarPokemon(ActionEvent event) {

		if (mediaPlayer1 != null) {
			mediaPlayer1.stop();
		}

		pokemonEncontrado.setText("");

		capturarPokemon.setText("CAPTURAR");

		pokemon = GeneraPokemonAleatorio.mostrarPokemonEncontrado();

		System.out.println("el id es: " + pokemon.getId());

//		pokemonEncontrado.setText("has enconrado un " + pokemon.getName());

		imgPokemon.setImage(new Image(getClass().getResourceAsStream(pokemon.getImagen())));

		String path = "src\\sound\\" + pokemon.getSonido();
		File archivo = new File(path);
		Media media = new Media(archivo.toURI().toString());
		mediaPlayer1 = new MediaPlayer(media);
		mediaPlayer1.setCycleCount(MediaPlayer.INDEFINITE);
		mediaPlayer1.play();

//		InsertarMoteController.setPokemon(pokemon);

	}

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub

//		CargarPokemon.cargarPokemonDesdeBbDd();

//		for (int i = 0; i < pokemon.size(); i++) {
//            System.out.println(pokemon.get(i).toString());
//		}
//		
	}
}
